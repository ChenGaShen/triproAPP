<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.menglin.invest" >
    <!--不扫描 @Controller注解的类  -->
    	  <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan> 
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
        <property name="ignoreUnresolvablePlaceholders" value="true" /> 
        <property name="location" value="classpath:jdbc.properties" />  
    </bean>  
  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close"> 
        <property name="driverClassName" value="${jdbc.driverClassName}" />  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${initialSize}"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${maxActive}"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${maxWait}"></property>
        
       <property name="removeAbandoned" value="${removeAbandoned}"/>  
       <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>  
       <property name="logAbandoned" value="${logAbandoned}"/>   
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/menglin/invest/mapper/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.menglin.invest.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean> 
    
  
    
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
    
    <!--自定义Realm-->  
    <bean id="myRealm" class="com.menglin.invest.common.MyRealm">
<!--     配置加密算法 -->
<!--           <property name="credentialsMatcher"> -->
<!--               shiro加密策略MD5 -->
<!--               <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher"> -->
<!--                   加密的策略 -->
<!--                  <property name="hashAlgorithmName" value="MD5"/> -->
<!--                   加密的次数 -->
<!--                    <property name="hashIterations" value="10"/> --> 
<!--                   <property name="storedCredentialsHexEncoded" value="true"/> --> 
<!--              </bean> -->
<!--          </property> -->
     </bean>
  
    <!--安全管理-->  
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <property name="realm" ref="myRealm"/>  
         <!-- 注入缓存管理器 -->  
        <property name="cacheManager" ref="cacheManager" />  
        <!-- 注入session管理器 -->  
        <!-- <property name="sessionManager" ref="sessionManager" /> -->  
        <!-- 记住我 -->  
<!--         <property name="rememberMeManager" ref="rememberMeManager" />  -->
    </bean>  
  
    <!--shiro 过滤器-->  
    <!-- 自定义shiro的filter 校验角色和权限-->
    <bean id="resourceCheckFilter" class="com.menglin.invest.common.ResourceCheckFilter" />
    
    
    <!-- 启用shrio授权注解拦截方式 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <!-- Shiro过滤器的核心安全接口，这个属性是必须的-->  
        <property name="securityManager" ref="securityManager"/>  
        <!--身份认证失败，则跳转到登录页面的配置-->  
        <property name="loginUrl" value="/log.html"/>  
        <!--权限认证失败，则跳转到指定页面-->  
        <property name="unauthorizedUrl" value="/unauthorized.html"/>
        <!-- 登录之后权限验证 -->
        <property name="filters">
            <map>
                <entry key="resourceCheckFilter" value-ref="resourceCheckFilter" />
            </map>
        </property>  
        <!-- Shiro连接约束配置，即过滤链的定义-->  
        <property name="filterChainDefinitions">  
            <value>
             	/**/**/**=anon <!-- 全部不拦截，测试用 -->
                /admin/index/logout.json=anon    <!-- anon表示退出登录不需要任何权限即可访问 -->
                /admin/index/doLogin.json=anon    <!-- anon表示此地址不需要任何权限即可访问 --> 
                /static/**/**=anon
                /web/**/**=anon
                /wxh5/**=anon
                /user/student*/**=roles[teacher]  <!-- roles[manager]表示访问此连接需要用户的角色为manager --> 
                /user/teacher*/**=perms["user:create"]   <!-- perms[user:query]表示访问此连接需要权限为user:query的用户 -->
<!--                 /** = authc   其他资源需要认证  -->
               /admin/**=authc,resourceCheckFilter
              
<!--                # 声明一个自定义的过滤器 -->
<!-- 				resourceCheckFilter = com.menglin.invest.common.ResourceCheckFilter -->
<!-- 				# 为上面声明的自定义过滤器注入属性值 -->
<!-- 				resourceCheckFilter.errorUrl=/unauthorized.html -->
            </value>  
        </property> 
        
       
    </bean>
			<!-- 会话管理器 -->  
		    <bean id="sessionManager"  
		        class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
		        <!-- session的失效时长，单位毫秒 -->  
		        <property name="globalSessionTimeout" value="600000" />  
		        <!-- 删除失效的session -->  
		        <property name="deleteInvalidSessions" value="true" />  
		    </bean>  
		    <!-- 缓存管理器 -->  
		    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
		        <property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml" />  
		    </bean>  
<!-- 		    rememberMeManager管理器，写cookie，取出cookie生成用户信息   -->
<!-- 		    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">   -->
<!-- 		        <property name="cookie" ref="rememberMeCookie" />   -->
<!-- 		    </bean>   -->
<!-- 		    记住我cookie   -->
<!-- 		    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">   -->
<!-- 		        rememberMe是cookie的名字   -->
<!-- 		        <constructor-arg value="rememberMe" />   -->
<!-- 		        记住我cookie生效时间30天   -->
<!-- 		        <property name="maxAge" value="2592000" />   -->
<!-- 		    </bean>   -->
</beans>