<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.menglin.triproapp.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.menglin.triproapp.entity.Order">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="order_price" jdbcType="DOUBLE" property="orderPrice" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="red_money" jdbcType="DOUBLE" property="redMoney" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="receive_name" jdbcType="VARCHAR" property="receiveName" />
    <result column="receive_phone" jdbcType="VARCHAR" property="receivePhone" />
    <result column="receive_address" jdbcType="VARCHAR" property="receiveAddress" />
    <result column="receive_state" jdbcType="INTEGER" property="receiveState" />
    <result column="air" jdbcType="VARCHAR" property="air" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="ip_address" jdbcType="VARCHAR" property="ipAddress" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="loginName" jdbcType="VARCHAR" property="loginName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, order_price AS orderPrice, money,red_money AS redMoney pay_time AS payTime, state, receive_name AS receiveName, receive_phone AS receivePhone,
     receive_address AS receiveAddress, 
    receive_state AS receiveState, air, company, add_time AS addTime, ip, ip_address AS ipAddress, remark
  </sql>
  
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
          SELECT
	t.id,
	t.uid,
	u.login_name AS loginName,
	t.order_price AS orderPrice,
	t.money,
	t.pay_time AS payTime,
	t.state,
	t.receive_name AS receiveName,
	t.receive_phone AS receivePhone,
	t.receive_address AS receiveAddress,
	t.receive_state AS receiveState,
	t.air,
	t.company,
	t.add_time AS addTime,
	t.ip,
	t.ip_address AS ipAddress,
	t.remark
FROM
	t_order t
LEFT JOIN t_user u ON t.uid = u.user_id
 where 1=1 
    and t.id = #{id,jdbcType=VARCHAR}
  </select>
  
  
   <!--根据用户ID查询所有订单  -->
  <select id="selectByUid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  
   <!--根据用户ID和订单状态 查询对应订单  -->
  <select id="selectByUidAndStatus" parameterType="Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order
    where uid = #{uid,jdbcType=INTEGER}
    
    <if test="state!=null ">
          AND   state =  #{state} 
    </if>
    <if test="receiveState!=null">
    	   AND   state =  1 
           AND   receive_state =  #{receiveState}
     </if>
  </select>
  
    <!-- 条件查询用户记录总数 -->
    <select id="selectCount" parameterType="java.util.Map" resultType="int">
       SELECT
	COUNT(*)
FROM
	t_order t
LEFT JOIN t_user u ON t.uid = u.user_id
  where 1=1 
 		 <if test="orderId!=null and orderId !='' "> <!-- String 类型判断为空或者null -->
          AND   t.id like  CONCAT('%',#{orderId},'%')  
        </if>
          <if test="loginName!=null and loginName'' ">
          AND   u.login_name like  CONCAT('%',#{loginName},'%')  
        </if>
           <if test="state!=null "> <!-- int 类型判断为空 或者为null-->
          AND   t.state   = #{state}  
        </if>
        <if test="receiveState!=null "> 
        
          AND   t.receive_state  = #{receiveState}  
        </if>
        <if test="startTime!=null and startTime !='' ">
          AND   t.add_time <![CDATA[>=]]> #{startTime} 
        </if>
           <if test="endTime!=null and endTime !='' ">
          AND   t.add_time <![CDATA[<=]]> #{endTime} 
        </if>
    </select>
  <!-- 分页条件查询start 和size查询数据 -->
  <select id="findByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
           SELECT
	t.id,
	t.uid,
	u.login_name AS loginName,
	t.order_price AS orderPrice,
	t.money,
	t.pay_time AS payTime,
	t.state,
	t.receive_name AS receiveName,
	t.receive_phone AS receivePhone,
	t.receive_address AS receiveAddress,
	t.receive_state AS receiveState,
	t.air,
	t.company,
	t.add_time AS addTime,
	t.ip,
	t.ip_address AS ipAddress,
	t.remark
FROM
	t_order t
LEFT JOIN t_user u ON t.uid = u.user_id
where 1=1 
 		 <if test="orderId!=null and orderId !='' ">
          AND   t.id like  CONCAT('%',#{orderId},'%')  
        </if>
    	  <if test="loginName!=null and loginName!='' ">
          AND   u.login_name like  CONCAT('%',#{loginName},'%')  
        </if>
           <if test="state!=null ">
          AND   t.state   = #{state}  
        </if>
        <if test="receiveState!=null  ">
         
          AND   t.receive_state   = #{receiveState}  
        </if>
        <if test="startTime!=null and startTime !='' ">
          AND   t.add_time <![CDATA[>=]]> #{startTime} 
        </if>
           <if test="endTime!=null and endTime !='' ">
          AND   t.add_time <![CDATA[<=]]> #{endTime} 
        </if>
       ORDER BY t.add_time desc
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
   
  </select>
  
  <!-- <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=VARCHAR}
  </select> -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_order
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.menglin.triproapp.entity.Order">
    insert into t_order (id, uid, order_price, 
      money, red_money, pay_time, 
      state, receive_name, receive_phone, 
      receive_address, receive_state, air, 
      company, add_time, ip, 
      ip_address, remark)
    values (#{id,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, #{orderPrice,jdbcType=DOUBLE}, 
      #{money,jdbcType=DOUBLE}, #{redMoney,jdbcType=DOUBLE}, #{payTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{receiveName,jdbcType=VARCHAR}, #{receivePhone,jdbcType=VARCHAR}, 
      #{receiveAddress,jdbcType=VARCHAR}, #{receiveState,jdbcType=INTEGER}, #{air,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, 
      #{ipAddress,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.menglin.triproapp.entity.Order">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="redMoney != null">
        red_money,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="receiveName != null">
        receive_name,
      </if>
      <if test="receivePhone != null">
        receive_phone,
      </if>
      <if test="receiveAddress != null">
        receive_address,
      </if>
      <if test="receiveState != null">
        receive_state,
      </if>
      <if test="air != null">
        air,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="ipAddress != null">
        ip_address,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="redMoney != null">
        #{redMoney,jdbcType=DOUBLE},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="receiveName != null">
        #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="receivePhone != null">
        #{receivePhone,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddress != null">
        #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiveState != null">
        #{receiveState,jdbcType=INTEGER},
      </if>
      <if test="air != null">
        #{air,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.menglin.triproapp.entity.Order">
    update t_order
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="redMoney != null">
        red_money = #{redMoney,jdbcType=DOUBLE},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="receiveName != null">
        receive_name = #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="receivePhone != null">
        receive_phone = #{receivePhone,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddress != null">
        receive_address = #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiveState != null">
        receive_state = #{receiveState,jdbcType=INTEGER},
      </if>
      <if test="air != null">
        air = #{air,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.menglin.triproapp.entity.Order">
    update t_order
    set uid = #{uid,jdbcType=INTEGER},
      order_price = #{orderPrice,jdbcType=DOUBLE},
      money = #{money,jdbcType=DOUBLE},
      red_money = #{redMoney,jdbcType=DOUBLE},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      receive_name = #{receiveName,jdbcType=VARCHAR},
      receive_phone = #{receivePhone,jdbcType=VARCHAR},
      receive_address = #{receiveAddress,jdbcType=VARCHAR},
      receive_state = #{receiveState,jdbcType=INTEGER},
      air = #{air,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
 
</mapper>