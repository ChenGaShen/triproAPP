<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.menglin.triproapp.dao.ActiveRedDao">
  <resultMap id="BaseResultMap" type="com.menglin.triproapp.entity.ActiveRed">
    <id column="activeId" jdbcType="INTEGER" property="activeid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="red_money" jdbcType="DOUBLE" property="redMoney" />
    <result column="red_state" jdbcType="INTEGER" property="redState" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
  </resultMap>
  <sql id="Base_Column_List">
      activeId, uid, red_money AS redMoney , red_state AS redState , add_time AS addTime, order_id AS orderId
  </sql>
  
   <!-- 根据用户UID 查询其所有的红包列表 -->
  <select id="selectActiveRedList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_active_red
    where uid = #{uid,jdbcType=INTEGER}
    order by add_time desc 
  </select>
  
  <!--根据订单orderId，查询对应红包信息 -->
   <select id="selectByorderId" parameterType="java.lang.String" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />
    from t_active_red
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  
  <!-- 查询用户记录总数 -->
    <select id="selectCount" parameterType="java.util.Map" resultType="int">
        select count(*)  from t_active_red t
        left join t_user u on t.uid =u.user_id where 1=1
       <if test="loginName!=null and loginName !='' ">
          AND  u.login_name like  CONCAT('%',#{loginName},'%')  
        </if>
    </select>
  
    <!-- 分页查询start 和size查询数据 -->
  <select id="findByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        t.activeId,
		t.uid,
		t.red_money AS redMoney,
		t.red_state AS redState,
		t.order_id AS orderId,
		t.add_time AS addTime,
        u.login_name AS loginName
        from t_active_red t
        left join t_user u on  t.uid =u.user_id  where 1=1
        <if test="loginName!=null and loginName !='' ">
          AND  u.login_name like  CONCAT('%',#{loginName},'%')  
        </if>
        ORDER BY t.add_time desc 
        <if test="start!=null and size!=null">
            limit #{start},#{size} 
        </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_active_red
    where activeId = #{activeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_active_red
    where activeId = #{activeid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.menglin.triproapp.entity.ActiveRed">
    insert into t_active_red (activeId, uid, red_money, 
      red_state, add_time, order_id
      )
    values (#{activeid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{redMoney,jdbcType=DOUBLE}, 
      #{redState,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{orderId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.menglin.triproapp.entity.ActiveRed">
    insert into t_active_red
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="activeid != null">
        activeId,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="redMoney != null">
        red_money,
      </if>
      <if test="redState != null">
        red_state,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="activeid != null">
        #{activeid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="redMoney != null">
        #{redMoney,jdbcType=DOUBLE},
      </if>
      <if test="redState != null">
        #{redState,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.menglin.triproapp.entity.ActiveRed">
    update t_active_red
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="redMoney != null">
        red_money = #{redMoney,jdbcType=DOUBLE},
      </if>
      <if test="redState != null">
        red_state = #{redState,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
    </set>
    where activeId = #{activeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.menglin.triproapp.entity.ActiveRed">
    update t_active_red
    set uid = #{uid,jdbcType=INTEGER},
      red_money = #{redMoney,jdbcType=DOUBLE},
      red_state = #{redState,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      order_id = #{orderId,jdbcType=VARCHAR}
    where activeId = #{activeid,jdbcType=INTEGER}
  </update>
</mapper>